# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1 
jobs:
  deploy-job:
    docker:
      - image: cimg/base:2022.09
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: "Build container"
          command: |
            cd /tmp/workspace
            version=`cat version.txt`
            echo "Making container version ${version}"
            docker build -t sispoller:latest -t sispoller:${version} -f Dockerfile.alpine . 
      - run:
          name: "Docker login"
          command: |
            docker login -u="$QUAY_ROBOT_USER" -p="$QUAY_ROBOT_PASSWORD" quay.io
      - run:
          name: "Tag and push container to quay"
          command: |
            docker tag sispoller quay.io/uuss/sispoller
            #docker push quay.io/uuss/sispoller

  compile-job:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.    # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/rust:1.89.0
    steps:
      - checkout
      - run:
          name: "Cargo build"
          command: |
            cd rust
            grep -m 1 version Cargo.toml | awk '{print $3}' | tr -d '"' > version.txt
            RUST_LOG=info cargo build --release
      - run:
           name: "Save artifacts"
           command: |
             mkdir -p /tmp/artifacts
             mkdir -p /tmp/workspace
             cp rust/target/release/sis_poller /tmp/artifacts/
             cp rust/target/release/sis_poller /tmp/workspace/
             cp rust/version.txt /tmp/workspace/
             cp rust/Dockerfile.circleci /tmp/workspace/Dockerfile.alpine
      - store_artifacts:
          path: /tmp/artifacts
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - sis_poller
            - version.txt
            - Dockerfile.alpine

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  compile-workflow: 
    jobs:
      - compile-job
      - deploy-job:
          requires:
            - compile-job
